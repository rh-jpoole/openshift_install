- name: Baremetal | Ensure the cluster folder exists
  ansible.builtin.file:
    path: "{{ baremetal_cluster_home_dir }}"
    state: directory

- name: Baremetal | Ensure the openshift folder exists
  ansible.builtin.file:
    path: "{{ baremetal_cluster_home_dir }}/openshift"
    state: directory

- name: Baremetal | Check if ISO already exists
  ansible.builtin.stat:
    name: "{{ baremetal_cluster_home_dir }}/agent.x86_64.iso"
  register: iso_file

- when: not iso_file.stat.exists
  block:
    - name: Baremetal | Generate install-config.yaml
      ansible.builtin.template:
        src: install-config.yaml.j2
        dest: "{{ baremetal_cluster_home_dir }}/install-config.yaml"
        mode: "0644"
      vars:
        __master_nodes_len: "{{ openshift_install_nodes | machacekondra.openshift_install.master_nodes_len }}"
        __worker_nodes_len: "{{ openshift_install_nodes | machacekondra.openshift_install.worker_nodes_len }}"

    - name: Baremetal | Generate agent-config.yaml
      ansible.builtin.template:
        src: agent-config.yaml.j2
        dest: "{{ baremetal_cluster_home_dir }}/agent-config.yaml"
        mode: "0644"
      vars:
        # __network_prefix: "{{ baremetal_network | ansible.utils.ipaddr('prefix') }}"
        __network_prefix: "24"
        __master_nodes_len: "{{ openshift_install_nodes | machacekondra.openshift_install.master_nodes_len }}"
        __worker_nodes_len: "{{ openshift_install_nodes | machacekondra.openshift_install.worker_nodes_len }}"

    - name: Baremetal | Create ISO image
      ansible.builtin.command: "{{ baremetal_install_binary }} agent create image --dir={{ baremetal_cluster_home_dir }}"
      environment:
        PATH: "{{ ansible_env.HOME }}/.{{ openshift_install_cluster_name }}/bin:{{ ansible_env.PATH }}"

### Not sure why this is here
# # Seems like there is no way to share single ISO between more hosts in iDRAC
# - name: Baremetal | Copy ISOs
#   ansible.builtin.copy:
#     src: "{{ baremetal_cluster_home_dir }}/agent.x86_64.iso"
#     dest: "{{ baremetal_cluster_home_dir }}/agent.{{ item }}.x86_64.iso"
#     remote_src: true
#   loop:
#     - 0
#     - 1
#     - 2

- name: Baremetal | Publish ISO on http server
  containers.podman.podman_container:
    name: "{{ inventory_hostname }}-agent-iso-httpd"
    image: "docker.io/library/httpd:2.4"
    recreate: true
    expose:
      - "{{ openshift_agent_iso_httpd_port }}"
    publish:
      - "{{ openshift_agent_iso_httpd_port }}:80"
    volumes:
      - "{{ baremetal_cluster_home_dir }}:/usr/local/apache2/htdocs/:Z"
    tty: true

- name: Baremetal | Boot ISOs
  ansible.builtin.include_tasks: "boot_iso.yml"
  loop: "{{ openshift_install_nodes }}"
  when:
    - (item.kubevirt is not defined or not item.kubevirt)

- name: OCP Virt | Boot VMs
  ansible.builtin.include_tasks: "boot_vms.yml"
  loop: "{{ openshift_install_nodes }}"
  when:
    - item.kubevirt is defined
    - item.kubevirt is mapping

- name: Baremetal | Wait for install
  ansible.builtin.command: "{{ baremetal_install_binary }} agent wait-for install-complete --dir={{ baremetal_cluster_home_dir }}"
  changed_when: false
  when: baremetal_wait_for_install
  environment:
    PATH: "{{ ansible_env.HOME }}/.{{ openshift_install_cluster_name }}/bin:{{ ansible_env.PATH }}"

- name: Baremetal | Remove http server
  containers.podman.podman_container:
    name: "{{ inventory_hostname }}-agent-iso-httpd"
    state: absent

- name: Baremetal | Clean up iso images
  ansible.builtin.file:
    state: absent
    path: "{{ baremetal_cluster_home_dir }}/{{ item }}"
  loop:
    - agent.0.x86_64.iso
    - agent.1.x86_64.iso
    - agent.2.x86_64.iso
    - agent.x86_64.iso
